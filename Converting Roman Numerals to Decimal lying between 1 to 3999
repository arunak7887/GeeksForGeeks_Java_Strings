Given a Roman numeral, the task is to find its corresponding decimal value.
Example : 
Input: IX
Output: 9
Explanation: IX is a Roman symbol which represents 9
Input: XL
Output: 40
Explanation: XL is a Roman symbol which represents 40
Roman numerals are based on the following symbols.  

SYMBOL       VALUE
  I            1
  IV           4
  V            5
  IX           9
  X            10
  XL           40
  L            50
  XC           90
  C            100
  CD           400
  D            500
  CM           900 
  M            1000


Code:

public class RomanToNumber {
	int value(char r) {
		if(r=='I')
			return 1;
		if(r=='V')
			return 5;
		if(r=='X')
			return 10;
		if(r=='L')
			return 50;
		if(r=='C')
			return 100;
		if(r=='D')
			return 500;
		if(r=='M')
			return 1000;
		return -1;
	}
	int romanToDecimal(String str) {
		int res=0;
		for(int i=0;i<str.length();i++) {
			int s1=value(str.charAt(i));
			if(i+1<str.length()) {
				int s2=value(str.charAt(i+1));
				if(s1>=s2) {
					res=res+s1;
				}else {
					res=res+s2-s1;
					i++;
				}
			}
			else {
				res=res+1;
			}
		}
		return res;	
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		RomanToNumber ob=new RomanToNumber();
		String str="MCMIV";
		System.out.println("Integer form of Roman Numberal"+"is == "+ob.romanToDecimal(str));
	}
}




Explain:
Algorithm to convert Roman Numerals to Integer Number:  
Split the Roman Numeral string into Roman Symbols (character).
Convert each symbol of Roman Numerals into the value it represents.
Take symbol one by one from starting from index 0: 
If current value of symbol is greater than or equal to the value of next symbol, then add this value to the running total.
else subtract this value by adding the value of next symbol to the running total.
